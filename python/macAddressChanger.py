#! /bin/python3

import subprocess
import optparse
import re


def getArguements():
    parser = optparse.OptionParser()
    parser.add_option(
        "-i",
        "--interface",
        dest="Interface",
        help="Interface to Change its MAC address",
    )
    parser.add_option("-m", "--mac", dest="New_Mac", help="New MAC address")
    (options, arguements) = parser.parse_args()
    if not options.Interface:
        parser.error("[-] Please specify an interface, use --help for more info.")
    elif not options.New_Mac:
        parser.error("[-] Please specify an new mac, use --help for more info.")
    return options


def changeMAC(interface, address):
    print(f"[+] Changing MAC Address for {interface} to {address}")
    subprocess.call(["sudo", "ifconfig", interface, "down"])
    subprocess.call(["sudo", "ifconfig", interface, "hw", "ether", address])
    subprocess.call(["sudo", "ifconfig", interface, "up"])


def getCurrentMAC(interface):
    ifconfigResult = subprocess.check_output(
        ["sudo", "ifconfig", interface], encoding="utf-8"
    )
    macAddressSearchResult = re.search(
        r"\w\w:\w\w:\w\w:\w\w:\w\w:\w\w", ifconfigResult
    )  # also can put str(ifconfigResult)
    if macAddressSearchResult:
        return macAddressSearchResult.group(0)


options = getArguements()
CurrentMAC = getCurrentMAC(options.Interface)
print(f"Current MAC = {CurrentMAC}")
changeMAC(options.Interface, options.New_Mac)
CurrentMAC = getCurrentMAC(options.Interface)
if CurrentMAC == options.New_Mac:
    print(f"[+] MAC address was successfully changed to {CurrentMAC}")
else:
    print("[-] MAC address did not get changed.")
