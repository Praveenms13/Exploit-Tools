import click
from .includes.fileread import readfile
from .includes.scan import cvescan
from .utils.helper import display_banner
from .utils.helper import display_help

def display_help_callback(ctx, param, value):
    if value and not ctx.resilient_parsing:
        display_help()
        ctx.exit()
    elif not value:
        display_banner()

@click.command()
@click.option('-i', '--input', type=str, help='Input file path')
@click.option('-o', '--output', type=str, help='Output file path', required=True)
@click.option('-u', '--url', type=str, help='URL to process')
@click.option('-p', '--payload', type=str, help='XSS Payload')
@click.option(
    "-h",
    "--help",
    is_flag=True,
    callback=display_help_callback,
    expose_value=False,
    is_eager=True,
    help="help menu",
)
        
def main(input, output, url, payload):
    if input is None and url is None:
        raise click.UsageError("[+] You must provide either an input file (-i) or URL (-u).")
    if not output:
        raise click.UsageError("[+] You must provide an output file (-o).")
    print("[+] Starting...")
    print("[+] Input file: {}".format(input))
    print("[+] URL: {}".format(url))
    print("[+] Output file: {}\n".format(output))
    if payload:
        print("[+] XSS Payload Used from: {}\n".format(payload))
    else:
        payload = None
        print("[+] Default XSS Payload will be used\n")
    if url:
        cvescan(url, output, payload)
    if input:
        readfile(input, output, payload)

    

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("[+] Keyboard interrupt")
        exit()
    except Exception as e:
        print(e)
        exit()  
